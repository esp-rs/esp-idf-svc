name: CI

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: "50 6 * * *"
  workflow_dispatch:

env:
  rust_toolchain: nightly
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - riscv32imc-esp-espidf
          - xtensa-esp32-espidf
          - xtensa-esp32s2-espidf
          - xtensa-esp32s3-espidf
        idf-version:
          - v4.4.5
          - v5.1.1
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Rust
        if: matrix.target == 'riscv32imc-esp-espidf'
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.rust_toolchain }}
          components: rustfmt, clippy, rust-src

      - name: Install Rust for Xtensa
        if: matrix.target != 'riscv32imc-esp-espidf'
        uses: esp-rs/xtensa-toolchain@v1.5.1
        with:
          default: true

      - name: Build | Fmt Check
        run: cargo fmt -- --check

      - name: Build | Clippy
        env:
          ESP_IDF_VERSION: ${{ matrix.idf-version }}
          ESP_IDF_SDKCONFIG_DEFAULTS: "${{ github.workspace }}/.github/configs/sdkconfig.defaults"
          ESP_IDF_COMPONENT_MANAGER: "${{ matrix.idf-version == 'v5.1.1' && 'y' || 'n'}}"
          RUSTFLAGS: "${{ matrix.idf-version == 'v5.1.1' && '--cfg espidf_time64' || ''}}"
        run: cargo clippy --features nightly,experimental --no-deps --target ${{ matrix.target }} -Zbuild-std=std,panic_abort -Zbuild-std-features=panic_immediate_abort -- -Dwarnings

      - name: Build | Compile
        env:
          ESP_IDF_VERSION: ${{ matrix.idf-version }}
          ESP_IDF_SDKCONFIG_DEFAULTS: "${{ github.workspace }}/.github/configs/sdkconfig.defaults"
          ESP_IDF_COMPONENT_MANAGER: "${{ matrix.idf-version == 'v5.1.1' && 'y' || 'n'}}"
          RUSTFLAGS: "${{ matrix.idf-version == 'v5.1.1' && '--cfg espidf_time64' || ''}}"
        run: cargo build --target ${{ matrix.target }} -Zbuild-std=std,panic_abort -Zbuild-std-features=panic_immediate_abort

      - name: Build | Compile, experimental, nightly, no_std
        env:
          ESP_IDF_VERSION: ${{ matrix.idf-version }}
          ESP_IDF_SDKCONFIG_DEFAULTS: "${{ github.workspace }}/.github/configs/sdkconfig.defaults"
          ESP_IDF_COMPONENT_MANAGER: "${{ matrix.idf-version == 'v5.1.1' && 'y' || 'n'}}"
          RUSTFLAGS: "${{ matrix.idf-version == 'v5.1.1' && '--cfg espidf_time64' || ''}}"
        run: cargo build --no-default-features --features nightly,experimental --target ${{ matrix.target }} -Zbuild-std=std,panic_abort -Zbuild-std-features=panic_immediate_abort

      - name: Build | Compile, experimental, nightly, alloc
        env:
          ESP_IDF_VERSION: ${{ matrix.idf-version }}
          ESP_IDF_SDKCONFIG_DEFAULTS: "${{ github.workspace }}/.github/configs/sdkconfig.defaults"
          ESP_IDF_COMPONENT_MANAGER: "${{ matrix.idf-version == 'v5.1.1' && 'y' || 'n'}}"
          RUSTFLAGS: "${{ matrix.idf-version == 'v5.1.1' && '--cfg espidf_time64' || ''}}"
        run: cargo build --no-default-features --features nightly,experimental,alloc --target ${{ matrix.target }} -Zbuild-std=std,panic_abort -Zbuild-std-features=panic_immediate_abort

      - name: Setup | ldproxy
        if: matrix.target == 'riscv32imc-esp-espidf'
        run: |
          curl -L https://github.com/esp-rs/embuild/releases/latest/download/ldproxy-x86_64-unknown-linux-gnu.zip -o $HOME/.cargo/bin/ldproxy.zip
          unzip "$HOME/.cargo/bin/ldproxy.zip" -d "$HOME/.cargo/bin/"
          chmod a+x $HOME/.cargo/bin/ldproxy

      - name: Build | Examples
        env:
          ESP_IDF_VERSION: ${{ matrix.idf-version }}
          ESP_IDF_SDKCONFIG_DEFAULTS: "${{ github.workspace }}/.github/configs/sdkconfig.defaults"
          ESP_IDF_COMPONENT_MANAGER: "${{ matrix.idf-version == 'v5.1.1' && 'y' || 'n'}}"
          RUSTFLAGS: "${{ matrix.idf-version == 'v5.1.1' && '--cfg espidf_time64 ' || ''}} ${{ '-C default-linker-libraries' }}"
          WIFI_SSID: "ssid"
          WIFI_PASS: "pass"
          ESP_DEVICE_IP: "192.168.1.250"
          GATEWAY_IP: "192.168.1.1"
          GATEWAY_NETMASK: "24"
        run: cargo build --examples --target ${{ matrix.target }} -Zbuild-std=std,panic_abort -Zbuild-std-features=panic_immediate_abort
